{"version":3,"sources":["utility/domEvents.js","constants/label.js","components/Instruction.jsx","components/Key.jsx","components/Keyboard.jsx","components/Word.jsx","components/Multiplier.jsx","components/Score.jsx","components/ScoreModal.jsx","assets/right.wav","assets/wrong.wav","components/Audio.jsx","components/WordStack.jsx","components/GamePage.jsx","components/Leaderboard.jsx","components/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["getKey","e","selector","location","KeyboardEvent","DOM_KEY_LOCATION_RIGHT","keyCode","code","which","encodeURIComponent","String","fromCharCode","join","document","querySelector","body","addEventListener","key","console","warn","localStorage","currentWord","innerText","setAttribute","removeAttribute","LEADERBOARD","Instuction","className","Key","char","defaultProps","Keyboard","Word","word","Multiplier","multiplier","toFixed","Score","score","ScoreModal","closeModal","saveScore","a","item","fetch","process","REACT_APP_API_URL","method","headers","Accept","JSON","stringify","result","json","status","alert","error","class","onClick","Audio","id","src","right","type","wrong","WordStack","useState","words","setWords","wordMatched","setWordMatched","setScore","setMultiplier","isModalOpen","setModalOpen","initialTime","Date","now","getWords","dictionary","toUpperCase","useEffect","onkeydown","shift","Math","round","currentScore","getElementById","play","length","GamePage","Leaderboard","closeLeaderboard","data","setData","getData","sortingFunction","b","sort","LABEL","array","sum","parseInt","calculateAverage","map","index","HomePage","isLeaderboardVisible","setLeaderboardVisible","isGamePageVisible","setGamePageVisible","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba558726.chunk.js","sourcesContent":["const getKey = (e) => {\r\n  const location = e.location;\r\n  let selector;\r\n  if (location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT) {\r\n    selector = ['[data-key=\"' + e.keyCode + '-R\"]'];\r\n  } else {\r\n    const code = e.keyCode || e.which;\r\n    selector = [\r\n      '[data-key=\"' + code + '\"]',\r\n      '[data-char*=\"' + encodeURIComponent(String.fromCharCode(code)) + '\"]',\r\n    ].join(\",\");\r\n  }\r\n  return document.querySelector(selector);\r\n};\r\n\r\ndocument.body.addEventListener(\"keydown\", function (e) {\r\n  const key = getKey(e);\r\n  if (!key) {\r\n    return console.warn(\"No key for\", e.keyCode);\r\n  }\r\n  localStorage.currentWord = localStorage.currentWord || \"\";\r\n  localStorage.currentWord += key.innerText;\r\n  key.setAttribute(\"data-pressed\", \"on\");\r\n});\r\n\r\ndocument.body.addEventListener(\"keyup\", function (e) {\r\n  const key = getKey(e);\r\n  key && key.removeAttribute(\"data-pressed\");\r\n});\r\n","export const TOTAL_NO_GAME = \"Total no. of Games\";\r\nexport const AVG_SCORE = \"Average Score\";\r\nexport const LEADERBOARD = \"Leaderboard\";\r\nexport const START_GAME = \"Start Game\";\r\nexport const CLOSE = \"Close\";\r\nexport const SHOW = \"Show\";\r\nexport const SCORE = \"SCORE\";\r\nexport const YES = \"Yes\";\r\nexport const NO = \"No\";\r\nexport const INSTRUCTION = \"Instructions\";\r\nexport const GAME_COMPLETED = \"Game Completed.\";\r\nexport const YOUR_SCORE = \"Your Score\";\r\nexport const SAVE_SCORE = \"Want to Save it?\";","import { INSTRUCTION } from \"./../constants/label\";\r\n\r\nconst Instuction = () => {\r\n  return (\r\n    <div className=\"instruction\">\r\n      <h2>{INSTRUCTION}</h2>\r\n      <ul>\r\n        <li>Game consists of total 20 words.</li>\r\n        <li>The faster you type, higher the score.</li>\r\n        <li>Multiplier will increase on when you type word correctly.</li>\r\n        <li>Multiplier will reset to 1 on wrong typing.</li>\r\n        <li>\r\n          On any mistype, whole word will reset and you have to type word again\r\n          from start.\r\n        </li>\r\n        <li>Use of Backspace is not allowed.</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Instuction;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Key = ({ char }) => {\r\n  return (\r\n    <div className=\"key--letter\" data-char={char}>\r\n      {char}\r\n    </div>\r\n  );\r\n};\r\n\r\nKey.propTypes = {\r\n  char: PropTypes.string.isRequired,\r\n};\r\n\r\nKey.defaultProps = {\r\n  char: \"\",\r\n};\r\nexport default Key;\r\n","import {} from \"./../utility/domEvents\";\r\nimport Key from \"./Key\";\r\n\r\nconst Keyboard = () => {\r\n  return (\r\n    <div className=\"keyboard\">\r\n      <div className=\"keyboard__row\">\r\n        <Key char=\"Q\" />\r\n        <Key char=\"W\" />\r\n        <Key char=\"E\" />\r\n        <Key char=\"R\" />\r\n        <Key char=\"T\" />\r\n        <Key char=\"Y\" />\r\n        <Key char=\"U\" />\r\n        <Key char=\"I\" />\r\n        <Key char=\"O\" />\r\n        <Key char=\"P\" />\r\n      </div>\r\n      <br />\r\n      <div className=\"keyboard__row\">\r\n        <Key char=\"A\" />\r\n        <Key char=\"S\" />\r\n        <Key char=\"D\" />\r\n        <Key char=\"F\" />\r\n        <Key char=\"G\" />\r\n        <Key char=\"H\" />\r\n        <Key char=\"J\" />\r\n        <Key char=\"K\" />\r\n        <Key char=\"L\" />\r\n      </div>\r\n      <br />\r\n      <div className=\"keyboard__row\">\r\n        <Key char=\"Z\" />\r\n        <Key char=\"X\" />\r\n        <Key char=\"C\" />\r\n        <Key char=\"V\" />\r\n        <Key char=\"B\" />\r\n        <Key char=\"N\" />\r\n        <Key char=\"M\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Word = ({ word }) => {\r\n  return <div className=\"word\">{word}</div>;\r\n};\r\n\r\nWord.propTypes = {\r\n  word: PropTypes.string.isRequired,\r\n};\r\n\r\nWord.defaultProps = {\r\n  word: \"\",\r\n};\r\n\r\nexport default Word;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Multiplier = ({ multiplier }) => {\r\n  return (\r\n    <div className=\"multiplier\">\r\n      <div className=\"big\">{multiplier.toFixed(1)}X</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMultiplier.propTypes = {\r\n  multiplier: PropTypes.number.isRequired,\r\n};\r\n\r\nMultiplier.defaultProps = {\r\n  multiplier: \"\",\r\n};\r\n\r\nexport default Multiplier;\r\n","import PropTypes from \"prop-types\";\r\nimport { SCORE } from \"./../constants/label\";\r\n\r\nconst Score = ({ score }) => {\r\n  return (\r\n    <div className=\"score\">\r\n      <div className=\"big\">{score}</div>\r\n      <div className=\"small\">{SCORE}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nScore.propTypes = {\r\n  score: PropTypes.number.isRequired,\r\n};\r\n\r\nScore.defaultProps = {\r\n  score: \"\",\r\n};\r\n\r\nexport default Score;\r\n","import PropTypes from \"prop-types\";\r\nimport * as LABEL from \"./../constants/label\";\r\n\r\nconst ScoreModal = ({ score, closeModal }) => {\r\n  const saveScore = async () => {\r\n    const item = { score };\r\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/api/scores/addScore`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(item),\r\n    });\r\n    result = await result.json();\r\n    if (result.status === 400) {\r\n      alert(result.error);\r\n      return;\r\n    }\r\n    closeModal();\r\n  };\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"score-modal-content\">\r\n        <h2>{LABEL.GAME_COMPLETED}</h2>\r\n        <h1>\r\n          {LABEL.YOUR_SCORE}: {score}\r\n        </h1>\r\n        <h4>{LABEL.SAVE_SCORE}</h4>\r\n        <div>\r\n          <button class=\"button black-button\" onClick={saveScore}>\r\n            {LABEL.YES}\r\n          </button>\r\n          <button class=\"button\" onClick={closeModal}>\r\n            {LABEL.NO}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nScoreModal.propTypes = {\r\n  score: PropTypes.string.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n};\r\n\r\nScoreModal.defaultProps = {\r\n  score: \"\",\r\n  closeModal: () => {},\r\n};\r\n\r\nexport default ScoreModal;\r\n","export default __webpack_public_path__ + \"static/media/right.c35664ce.wav\";","export default __webpack_public_path__ + \"static/media/wrong.88943cf4.wav\";","import right from \"./../assets/right.wav\";\r\nimport wrong from \"./../assets/wrong.wav\";\r\n\r\nconst Audio = () => {\r\n  return (\r\n    <div>\r\n      <audio id=\"right\">\r\n        <source src={right} type=\"audio/wav\" />\r\n      </audio>\r\n      <audio id=\"wrong\">\r\n        <source src={wrong} type=\"audio/wav\" />\r\n      </audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Audio;\r\n","import Word from \"./Word\";\r\nimport Multiplier from \"./Multiplier\";\r\nimport Score from \"./Score\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport dictionary from \"./../data/dictionary.json\";\r\nimport ScoreModal from \"./ScoreModal\";\r\nimport Audio from \"./Audio\";\r\n\r\n//Score = (1/time)*multiplier*10)\r\n\r\nconst WordStack = () => {\r\n  const [words, setWords] = useState([]);\r\n  const [wordMatched, setWordMatched] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [multiplier, setMultiplier] = useState(1);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  let initialTime = Date.now();\r\n  let currentWord = \"\";\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setScore(0);\r\n    setMultiplier(1);\r\n    getWords();\r\n  };\r\n\r\n  const getWords = () => {\r\n    for (let word of dictionary) {\r\n      setWords((words) => [...words, word.toUpperCase()]);\r\n    }\r\n  };\r\n\r\n  const playRightSound = () => {\r\n    document.getElementById(\"right\").play();\r\n  };\r\n\r\n  const playWrongSound = () => {\r\n    document.getElementById(\"wrong\").play();\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWords();\r\n  }, []);\r\n\r\n  const getKey = (e) => {\r\n    const location = e.location;\r\n    let selector;\r\n    if (location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT) {\r\n      selector = ['[data-key=\"' + e.keyCode + '-R\"]'];\r\n    } else {\r\n      const code = e.keyCode || e.which;\r\n      selector = [\r\n        '[data-key=\"' + code + '\"]',\r\n        '[data-char*=\"' + encodeURIComponent(String.fromCharCode(code)) + '\"]',\r\n      ].join(\",\");\r\n    }\r\n    return document.querySelector(selector);\r\n  };\r\n\r\n  document.onkeydown = (e) => {\r\n    const key = getKey(e);\r\n    if (!key) {\r\n      return;\r\n    }\r\n    currentWord += key.innerText;\r\n    if (currentWord === words[0]) {\r\n      words.shift();\r\n      setWordMatched(true);\r\n      const score = Math.round(\r\n        (1 / (Date.now() - initialTime)) * multiplier * 100000\r\n      );\r\n      setScore((currentScore) => currentScore + score);\r\n      setMultiplier((multiplier) => multiplier + 0.1);\r\n      currentWord = \"\";\r\n      playRightSound();\r\n      if (words.length === 0) {\r\n        setModalOpen(true);\r\n      }\r\n    } else if (key.innerText !== words[0][currentWord.length - 1]) {\r\n      setMultiplier(1);\r\n      playWrongSound();\r\n      currentWord = \"\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setWordMatched(false);\r\n  }, [wordMatched]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"score-info\">\r\n        <Score score={score} />\r\n        <Multiplier multiplier={multiplier} />\r\n      </div>\r\n      <div className=\"word-stack\">\r\n        {words.length > 0 ? (\r\n          <>\r\n            <Word word={words[0]} />\r\n          </>\r\n        ) : isModalOpen ? (\r\n          <ScoreModal score={score} closeModal={closeModal} />\r\n        ) : null}\r\n      </div>\r\n      <Audio />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WordStack;\r\n","import Instuction from \"./Instruction\";\r\nimport Keyboard from \"./Keyboard\";\r\nimport WordStack from \"./WordStack\";\r\n\r\nconst GamePage = () => {\r\n  return (\r\n    <div className=\"flex-col-center\">\r\n      <Instuction />\r\n      <WordStack />\r\n      <Keyboard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as LABEL from \"./../constants/label\";\r\n\r\nconst Leaderboard = ({ closeLeaderboard }) => {\r\n  const [data, setData] = useState([]);\r\n  const getData = async () => {\r\n    let result = await fetch(`${process.env.REACT_APP_API_URL}/api/scores`);\r\n    result = await result.json();\r\n    const sortingFunction = (a, b) => (b.score < a.score ? 1 : -1);\r\n    setData(result.sort(sortingFunction));\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const calculateAverage = (array) => {\r\n    let sum = 0;\r\n    for (let { score } of array) {\r\n      sum = sum + parseInt(score);\r\n    }\r\n    return (sum / array.length).toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"leaderboard-modal-content\">\r\n        <div className=\"tar\">\r\n          <div className=\"close-button\" onClick={closeLeaderboard}>\r\n            {LABEL.CLOSE}\r\n          </div>\r\n        </div>\r\n        <h1>{LABEL.LEADERBOARD}</h1>\r\n        <div>\r\n          <h3>\r\n            {LABEL.TOTAL_NO_GAME}: {data.length}\r\n          </h3>\r\n          <h3>\r\n            {LABEL.AVG_SCORE}: {data.length > 0 ? calculateAverage(data) : 0}\r\n          </h3>\r\n        </div>\r\n        <div className=\"leaderboard-list\">\r\n          <ul>\r\n            {data.map(({ score }, index) => (\r\n              <div className=\"flex-center\" key={index}>\r\n                <p>{index + 1}.</p>&nbsp;\r\n                <li>{score}</li>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLeaderboard.propTypes = {\r\n  closeLeaderboard: PropTypes.func.isRequired,\r\n};\r\n\r\nLeaderboard.defaultProps = {\r\n  closeLeaderboard: () => {},\r\n};\r\n\r\nexport default Leaderboard;\r\n","import { useState } from \"react\";\r\nimport GamePage from \"./GamePage\";\r\nimport Leaderboard from \"./Leaderboard\";\r\nimport * as LABEL from \"./../constants/label\";\r\n\r\nconst HomePage = () => {\r\n  const [isLeaderboardVisible, setLeaderboardVisible] = useState(false);\r\n  const [isGamePageVisible, setGamePageVisible] = useState(false);\r\n  const showLeaderboard = () => {\r\n    setLeaderboardVisible(true);\r\n  };\r\n  const startGame = () => {\r\n    setGamePageVisible(true);\r\n  };\r\n  const closeLeaderboard = () => {\r\n    setLeaderboardVisible(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {!isLeaderboardVisible && !isGamePageVisible ? (\r\n        <div className=\"home\">\r\n          <button onClick={showLeaderboard}>{LABEL.LEADERBOARD}</button>\r\n          <button onClick={startGame}>{LABEL.START_GAME}</button>\r\n        </div>\r\n      ) : null}\r\n      {isLeaderboardVisible ? (\r\n        <Leaderboard closeLeaderboard={closeLeaderboard} />\r\n      ) : null}\r\n      {isGamePageVisible ? <GamePage /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import \"./App.css\";\nimport HomePage from \"./components/HomePage\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}